apiVersion: v1
kind: ServiceAccount
metadata:
  name: keights-coredns
  namespace: keights

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keights-coredns
rules:
  - apiGroups: [ "" ]
    resources:
      - services
    verbs:
      - watch
      - list
  - apiGroups: [ "" ]
    resources:
      - configmaps
    verbs:
      - watch
      - list
      - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keights-coredns
subjects:
  - kind: ServiceAccount
    name: keights-coredns
    namespace: keights
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keights-coredns

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keights-coredns
  namespace: keights
  labels:
    app: keights-coredns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keights-coredns
  template:
    metadata:
      labels:
        app: keights-coredns
    spec:
      serviceAccountName: keights-coredns
      containers:
        - name: keights-coredns
          image: ${REG_URL}/dev/keights-coredns
          imagePullPolicy: Always
#          livenessProbe:
#            httpGet:
#              port: 8080
#              path: /actuator/health/liveness
#          readinessProbe:
#            httpGet:
#              port: 8080
#              path: /actuator/health/readiness

---

apiVersion: v1
kind: Service
metadata:
  name: keights-coredns
  namespace: keights
spec:
  selector:
    app: keights-coredns
  ports:
    - name: keights-coredns
      protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keights-coredns
  namespace: keights
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keights-coredns
                port:
                  number: 8080
